// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: delay.proto

#include "delay.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace delayMessage {
class DelayMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DelayMsg>
      _instance;
} _DelayMsg_default_instance_;
}  // namespace delayMessage
namespace protobuf_delay_2eproto {
static void InitDefaultsDelayMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::delayMessage::_DelayMsg_default_instance_;
    new (ptr) ::delayMessage::DelayMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::delayMessage::DelayMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DelayMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDelayMsg}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DelayMsg.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::delayMessage::DelayMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::delayMessage::DelayMsg, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::delayMessage::DelayMsg, send_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::delayMessage::DelayMsg, uav_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::delayMessage::DelayMsg, lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::delayMessage::DelayMsg, lon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::delayMessage::DelayMsg, alt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::delayMessage::DelayMsg, vx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::delayMessage::DelayMsg, vy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::delayMessage::DelayMsg, vz_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::delayMessage::DelayMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::delayMessage::_DelayMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "delay.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013delay.proto\022\014delayMessage\"\210\001\n\010DelayMsg"
      "\022\016\n\006msg_id\030\001 \001(\r\022\021\n\tsend_time\030\002 \001(\001\022\016\n\006u"
      "av_id\030\003 \001(\r\022\013\n\003lat\030\004 \001(\001\022\013\n\003lon\030\005 \001(\001\022\013\n"
      "\003alt\030\006 \001(\001\022\n\n\002vx\030\007 \001(\001\022\n\n\002vy\030\010 \001(\001\022\n\n\002vz"
      "\030\t \001(\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 174);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "delay.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_delay_2eproto
namespace delayMessage {

// ===================================================================

void DelayMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelayMsg::kMsgIdFieldNumber;
const int DelayMsg::kSendTimeFieldNumber;
const int DelayMsg::kUavIdFieldNumber;
const int DelayMsg::kLatFieldNumber;
const int DelayMsg::kLonFieldNumber;
const int DelayMsg::kAltFieldNumber;
const int DelayMsg::kVxFieldNumber;
const int DelayMsg::kVyFieldNumber;
const int DelayMsg::kVzFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelayMsg::DelayMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_delay_2eproto::scc_info_DelayMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:delayMessage.DelayMsg)
}
DelayMsg::DelayMsg(const DelayMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&send_time_, &from.send_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&vz_) -
    reinterpret_cast<char*>(&send_time_)) + sizeof(vz_));
  // @@protoc_insertion_point(copy_constructor:delayMessage.DelayMsg)
}

void DelayMsg::SharedCtor() {
  ::memset(&send_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vz_) -
      reinterpret_cast<char*>(&send_time_)) + sizeof(vz_));
}

DelayMsg::~DelayMsg() {
  // @@protoc_insertion_point(destructor:delayMessage.DelayMsg)
  SharedDtor();
}

void DelayMsg::SharedDtor() {
}

void DelayMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DelayMsg::descriptor() {
  ::protobuf_delay_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_delay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelayMsg& DelayMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_delay_2eproto::scc_info_DelayMsg.base);
  return *internal_default_instance();
}


void DelayMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:delayMessage.DelayMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&send_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vz_) -
      reinterpret_cast<char*>(&send_time_)) + sizeof(vz_));
  _internal_metadata_.Clear();
}

bool DelayMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:delayMessage.DelayMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double send_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &send_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uav_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uav_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lat = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lon = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double alt = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &alt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vx = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vy = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vz = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:delayMessage.DelayMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:delayMessage.DelayMsg)
  return false;
#undef DO_
}

void DelayMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:delayMessage.DelayMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msg_id = 1;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msg_id(), output);
  }

  // double send_time = 2;
  if (this->send_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->send_time(), output);
  }

  // uint32 uav_id = 3;
  if (this->uav_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uav_id(), output);
  }

  // double lat = 4;
  if (this->lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->lat(), output);
  }

  // double lon = 5;
  if (this->lon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->lon(), output);
  }

  // double alt = 6;
  if (this->alt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->alt(), output);
  }

  // double vx = 7;
  if (this->vx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->vx(), output);
  }

  // double vy = 8;
  if (this->vy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->vy(), output);
  }

  // double vz = 9;
  if (this->vz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->vz(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:delayMessage.DelayMsg)
}

::google::protobuf::uint8* DelayMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:delayMessage.DelayMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msg_id = 1;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msg_id(), target);
  }

  // double send_time = 2;
  if (this->send_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->send_time(), target);
  }

  // uint32 uav_id = 3;
  if (this->uav_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uav_id(), target);
  }

  // double lat = 4;
  if (this->lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->lat(), target);
  }

  // double lon = 5;
  if (this->lon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->lon(), target);
  }

  // double alt = 6;
  if (this->alt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->alt(), target);
  }

  // double vx = 7;
  if (this->vx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->vx(), target);
  }

  // double vy = 8;
  if (this->vy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->vy(), target);
  }

  // double vz = 9;
  if (this->vz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->vz(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:delayMessage.DelayMsg)
  return target;
}

size_t DelayMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:delayMessage.DelayMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double send_time = 2;
  if (this->send_time() != 0) {
    total_size += 1 + 8;
  }

  // uint32 msg_id = 1;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());
  }

  // uint32 uav_id = 3;
  if (this->uav_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uav_id());
  }

  // double lat = 4;
  if (this->lat() != 0) {
    total_size += 1 + 8;
  }

  // double lon = 5;
  if (this->lon() != 0) {
    total_size += 1 + 8;
  }

  // double alt = 6;
  if (this->alt() != 0) {
    total_size += 1 + 8;
  }

  // double vx = 7;
  if (this->vx() != 0) {
    total_size += 1 + 8;
  }

  // double vy = 8;
  if (this->vy() != 0) {
    total_size += 1 + 8;
  }

  // double vz = 9;
  if (this->vz() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DelayMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:delayMessage.DelayMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const DelayMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelayMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:delayMessage.DelayMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:delayMessage.DelayMsg)
    MergeFrom(*source);
  }
}

void DelayMsg::MergeFrom(const DelayMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:delayMessage.DelayMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.send_time() != 0) {
    set_send_time(from.send_time());
  }
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
  if (from.uav_id() != 0) {
    set_uav_id(from.uav_id());
  }
  if (from.lat() != 0) {
    set_lat(from.lat());
  }
  if (from.lon() != 0) {
    set_lon(from.lon());
  }
  if (from.alt() != 0) {
    set_alt(from.alt());
  }
  if (from.vx() != 0) {
    set_vx(from.vx());
  }
  if (from.vy() != 0) {
    set_vy(from.vy());
  }
  if (from.vz() != 0) {
    set_vz(from.vz());
  }
}

void DelayMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:delayMessage.DelayMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelayMsg::CopyFrom(const DelayMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:delayMessage.DelayMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelayMsg::IsInitialized() const {
  return true;
}

void DelayMsg::Swap(DelayMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelayMsg::InternalSwap(DelayMsg* other) {
  using std::swap;
  swap(send_time_, other->send_time_);
  swap(msg_id_, other->msg_id_);
  swap(uav_id_, other->uav_id_);
  swap(lat_, other->lat_);
  swap(lon_, other->lon_);
  swap(alt_, other->alt_);
  swap(vx_, other->vx_);
  swap(vy_, other->vy_);
  swap(vz_, other->vz_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DelayMsg::GetMetadata() const {
  protobuf_delay_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_delay_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace delayMessage
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::delayMessage::DelayMsg* Arena::CreateMaybeMessage< ::delayMessage::DelayMsg >(Arena* arena) {
  return Arena::CreateInternal< ::delayMessage::DelayMsg >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
